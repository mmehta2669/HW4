The algorithm designed for the problem has to main components, A precalc that calculates the different values of the possible group total before running the main loop. 
This saves a large a amount of computational time as instead of calculating the sum by running through the list it is now a constant time equation. 
the main algorithm now runs through all possible positions for the dividers a the total sums that are created by the various possible groups in a table. 
the code currently works up to test 15 in kattis but get a fail at 16. this issue has not been solved yet. some possible fixes could be using a binary tree instead of a table for the sum values.
